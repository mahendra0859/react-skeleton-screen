{"version":3,"sources":["skeletons/SkeletonElemet.js","components/Article.js","components/User.js","App.js","index.js"],"names":["SkeletonElement","type","clasess","className","Articles","useState","articles","setArticles","useEffect","setTimeout","a","fetch","result","json","data","map","article","key","id","title","body","User","profile","setProfile","username","email","href","website","App","Article","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQASeA,G,MANS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAO,mBAAeD,GAE5B,OAAO,yBAAKE,UAAWD,MC4BVE,EA/BE,WAAO,IAAD,EACWC,mBAAS,MADpB,mBACdC,EADc,KACJC,EADI,KAWrB,OARAC,qBAAU,WACRC,WAAU,sBAAC,8BAAAC,EAAA,sEACYC,MAAM,6CADlB,cACHC,EADG,gBAEUA,EAAOC,OAFjB,OAEHC,EAFG,OAGTP,EAAYO,GAHH,2CAIR,OACF,IAGD,yBAAKX,UAAU,YACb,wCAEA,kBAAC,EAAD,CAAeF,KAAK,UACpB,kBAAC,EAAD,CAAeA,KAAK,SACpB,kBAAC,EAAD,CAAeA,KAAK,cACpB,kBAAC,EAAD,CAAeA,KAAK,WACnBK,GACCA,EAASS,KAAI,SAACC,GAAD,OACX,yBAAKb,UAAU,UAAUc,IAAKD,EAAQE,IACpC,4BAAKF,EAAQG,OACb,2BAAIH,EAAQI,WAGhBd,GAAY,6CCDLe,EA1BF,WAAO,IAAD,EACahB,mBAAS,MADtB,mBACViB,EADU,KACDC,EADC,KAWjB,OARAf,qBAAU,WACRC,WAAU,sBAAC,8BAAAC,EAAA,sEACYC,MAAM,+CADlB,cACHC,EADG,gBAEUA,EAAOC,OAFjB,OAEHC,EAFG,OAGTS,EAAWT,GAHF,2CAIR,OACF,IAGD,yBAAKX,UAAU,QACb,4CACCmB,GACC,yBAAKnB,UAAU,WACb,4BAAKmB,EAAQE,UACb,2BAAIF,EAAQG,OACZ,uBAAGC,KAAMJ,EAAQK,SAAUL,EAAQK,WAGrCL,GAAW,6CCLJM,MAdf,WACE,OACE,yBAAKzB,UAAU,OACb,gCACE,gDAEF,yBAAKA,UAAU,WACb,kBAAC0B,EAAD,MACA,kBAAC,EAAD,SCPRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.eff4f143.chunk.js","sourcesContent":["import React from 'react';\nimport './Skelton.css';\n\nconst SkeletonElement = ({ type }) => {\n  const clasess = `skeleton ${type}`;\n\n  return <div className={clasess}></div>;\n};\n\nexport default SkeletonElement;\n","import React, { useState, useEffect } from 'react';\nimport SkeltonElemnt from '../skeletons/SkeletonElemet';\n\nconst Articles = () => {\n  const [articles, setArticles] = useState(null);\n\n  useEffect(() => {\n    setTimeout(async () => {\n      const result = await fetch('http://jsonplaceholder.typicode.com/posts');\n      const data = await result.json();\n      setArticles(data);\n    }, 5000);\n  }, []);\n\n  return (\n    <div className='articles'>\n      <h2>Articles</h2>\n\n      <SkeltonElemnt type='title' />\n      <SkeltonElemnt type='text' />\n      <SkeltonElemnt type='thumbnail' />\n      <SkeltonElemnt type='avatar' />\n      {articles &&\n        articles.map((article) => (\n          <div className='article' key={article.id}>\n            <h3>{article.title}</h3>\n            <p>{article.body}</p>\n          </div>\n        ))}\n      {!articles && <div>Loading...</div>}\n    </div>\n  );\n};\n\nexport default Articles;\n","import React, { useState, useEffect } from 'react';\n\nconst User = () => {\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() => {\n    setTimeout(async () => {\n      const result = await fetch('http://jsonplaceholder.typicode.com/users/1');\n      const data = await result.json();\n      setProfile(data);\n    }, 5000);\n  }, []);\n\n  return (\n    <div className='user'>\n      <h2>User Details</h2>\n      {profile && (\n        <div className='profile'>\n          <h3>{profile.username}</h3>\n          <p>{profile.email}</p>\n          <a href={profile.website}>{profile.website}</a>\n        </div>\n      )}\n      {!profile && <div>Loading...</div>}\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport Articles from './components/Article';\nimport User from './components/User';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header>\n        <h1>React Skeletons</h1>\n      </header>\n      <div className='content'>\n        <Articles />\n        <User />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}